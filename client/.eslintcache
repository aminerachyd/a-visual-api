[{"C:\\Projects\\A_visual_API\\client\\src\\index.tsx":"1","C:\\Projects\\A_visual_API\\client\\src\\reportWebVitals.ts":"2","C:\\Projects\\A_visual_API\\client\\src\\App.tsx":"3","C:\\Projects\\A_visual_API\\client\\src\\components\\layout\\Navbar.tsx":"4","C:\\Projects\\A_visual_API\\client\\src\\components\\layout\\Footer.tsx":"5","C:\\Projects\\A_visual_API\\client\\src\\components\\home\\Home.tsx":"6","C:\\Projects\\A_visual_API\\client\\src\\components\\about\\About.tsx":"7","C:\\Projects\\A_visual_API\\client\\src\\components\\home\\form\\Form.tsx":"8"},{"size":592,"mtime":1608909210787,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":595,"mtime":1608912091984,"results":"12","hashOfConfig":"10"},{"size":1728,"mtime":1608912087634,"results":"13","hashOfConfig":"10"},{"size":328,"mtime":1608909292033,"results":"14","hashOfConfig":"10"},{"size":1369,"mtime":1608912466608,"results":"15","hashOfConfig":"10"},{"size":590,"mtime":1608912408113,"results":"16","hashOfConfig":"10"},{"size":3295,"mtime":1608916015986,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1sdvixd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Projects\\A_visual_API\\client\\src\\index.tsx",[],["36","37"],"C:\\Projects\\A_visual_API\\client\\src\\reportWebVitals.ts",[],"C:\\Projects\\A_visual_API\\client\\src\\App.tsx",[],"C:\\Projects\\A_visual_API\\client\\src\\components\\layout\\Navbar.tsx",[],"C:\\Projects\\A_visual_API\\client\\src\\components\\layout\\Footer.tsx",[],"C:\\Projects\\A_visual_API\\client\\src\\components\\home\\Home.tsx",[],"C:\\Projects\\A_visual_API\\client\\src\\components\\about\\About.tsx",[],"C:\\Projects\\A_visual_API\\client\\src\\components\\home\\form\\Form.tsx",["38","39"],"import React, { useState } from \"react\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\n\r\ninterface StateForm {\r\n  requestApi: string;\r\n  requestMethod: string;\r\n  requestBody: string;\r\n}\r\n\r\nfunction Form() {\r\n  let formData: StateForm;\r\n  let setFormData: any;\r\n\r\n  [formData, setFormData] = useState({\r\n    requestApi: \"\",\r\n    requestMethod: \"GET\",\r\n    requestBody: \"\",\r\n  });\r\n\r\n  const onChange = (e: any) => {\r\n    e.target.name === \"requestMethod\"\r\n      ? setFormData({ ...formData, [e.target.name]: e.target.innerHTML })\r\n      : setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    // Sending the form data to the server\r\n    const res: AxiosResponse = await axios.post(\"/request\", formData);\r\n\r\n    console.log(res);\r\n  };\r\n\r\n  let { requestApi, requestMethod, requestBody } = formData;\r\n\r\n  return (\r\n    <form onSubmit={(e) => onSubmit(e)}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"api_input\">API Link</label>\r\n        <div className=\"d-flex\">\r\n          <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n              <span className=\"input-group-text\">\r\n                {requestMethod.toUpperCase()}\r\n              </span>\r\n            </div>\r\n            <input\r\n              id=\"api_input\"\r\n              type=\"text\"\r\n              className=\"form-control mr-3\"\r\n              name=\"requestApi\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary dropdown-toggle\"\r\n              data-toggle=\"dropdown\"\r\n            >\r\n              Request Method\r\n            </button>\r\n            <div className=\"dropdown-menu dropdown-menu-right\">\r\n              <button\r\n                onClick={(e) => onChange(e)}\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n                name=\"requestMethod\"\r\n              >\r\n                GET\r\n              </button>\r\n              <button\r\n                onClick={(e) => onChange(e)}\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n                name=\"requestMethod\"\r\n              >\r\n                POST\r\n              </button>\r\n              <button\r\n                onClick={(e) => onChange(e)}\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n                name=\"requestMethod\"\r\n              >\r\n                PUT\r\n              </button>\r\n              <button\r\n                onClick={(e) => onChange(e)}\r\n                className=\"dropdown-item\"\r\n                type=\"button\"\r\n                name=\"requestMethod\"\r\n              >\r\n                DELETE\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"exampleInputEmail1\">Body</label>\r\n        <textarea\r\n          className=\"form-control\"\r\n          name=\"requestBody\"\r\n          onChange={(e) => onChange(e)}\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":34,"column":9,"nodeType":"46","messageId":"47","endLine":34,"endColumn":19},{"ruleId":"44","severity":1,"message":"48","line":34,"column":36,"nodeType":"46","messageId":"47","endLine":34,"endColumn":47},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"@typescript-eslint/no-unused-vars","'requestApi' is assigned a value but never used.","Identifier","unusedVar","'requestBody' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]